// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockMarket.AdminService.Models;

namespace StockMarket.AdminService.Migrations
{
    [DbContext(typeof(AdminContextDB))]
    partial class AdminContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StckMarket.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StockExchangeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StockExchangeId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("StckMarket.Models.IPODetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockExchangeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.HasIndex("StockExchangeId")
                        .IsUnique();

                    b.ToTable("IPODetails");
                });

            modelBuilder.Entity("StckMarket.Models.StockExchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockExchanges");
                });

            modelBuilder.Entity("StckMarket.Models.StockPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockExchangeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StockExchangeId1")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StockExchangeId1");

                    b.ToTable("StockPrices");
                });

            modelBuilder.Entity("StckMarket.Models.Company", b =>
                {
                    b.HasOne("StckMarket.Models.StockExchange", "StockExchange")
                        .WithMany("Companies")
                        .HasForeignKey("StockExchangeId");
                });

            modelBuilder.Entity("StckMarket.Models.IPODetail", b =>
                {
                    b.HasOne("StckMarket.Models.Company", "Company")
                        .WithOne("IPODetail")
                        .HasForeignKey("StckMarket.Models.IPODetail", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StckMarket.Models.StockExchange", "StockExchange")
                        .WithOne("IPODetail")
                        .HasForeignKey("StckMarket.Models.IPODetail", "StockExchangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StckMarket.Models.StockPrice", b =>
                {
                    b.HasOne("StckMarket.Models.Company", "Company")
                        .WithMany("StockPrices")
                        .HasForeignKey("CompanyId");

                    b.HasOne("StckMarket.Models.StockExchange", "StockExchange")
                        .WithMany("StockPrices")
                        .HasForeignKey("StockExchangeId1");
                });
#pragma warning restore 612, 618
        }
    }
}
